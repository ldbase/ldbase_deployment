{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template that creates an LDbase Drupal 8 environment based on a set of parameters.",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "BastionInstanceType" : {
      "Description" : "Bastion Server Instance Type",
      "Type" : "String",
      "Default" : "t2.nano",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the Bastion server",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "RDSSubnet1AZ": {
      "Description": "Availability Zone of the Subnet",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    }, 
    "RDSSubnet2AZ": {
      "Description": "Availability Zone of the Subnet",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },    
    "DrupalInstanceType" : {
      "Description" : "Drupal Server Instance Type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },    
    "DatabaseRootUser": {
      "Default": "administrator",
      "Type": "String",
      "Description": "The username for the database root user"
    },
    "DatabaseRootPass": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "The password for the database root user",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters"
    },
    "DrupalDatabaseUser": {
      "Default": "drupaluser",
      "Type": "String",
      "Description": "The username for the Drupal database"
    },
    "DrupalDatabasePass": {
      "NoEcho": "true",      
      "Type": "String",
      "Description": "The password for the Drupal database",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters"
    },
    "DrupalAdminUser": {
      "Default": "admin",
      "Type": "String",
      "Description": "The username for the Drupal admin user"
    },
    "DrupalAdminPass": {
      "NoEcho": "true",      
      "Type": "String",
      "Description": "The password for the Drupal admin user",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters"
    },
    "DrupalAdminEmail": {
      "Default": "no-reply@example.com",
      "Type": "String",
      "Description": "The email for the Drupal admin user"
    },
  },

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [{
        "Label" : {"default": "SSH Bastion Information"},
        "Parameters" : ["BastionInstanceType", "KeyName", "SSHLocation"]
        },{
        "Label" : {"default": "DB Server Information"},
        "Parameters" : ["DatabaseRootUser", "DatabaseRootPass", "RDSSubnet1AZ", "RDSSubnet2AZ"]
        },{
        "Label" : {"default": "Drupal Server Information"},
        "Parameters" : ["DrupalInstanceType", "DrupalDatabaseUser", "DrupalDatabasePass", 
         "DrupalAdminUser", "DrupalAdminPass", "DrupalAdminEmail", "DrupalSiteName"]
        },{
        "Label" : {"default": "Fedora Server Information"},
        "Parameters" : ["FedoraInstanceType", "FedoraDatabaseUser", "FedoraDatabasePass",
         "FedoraAdminPass", "TomcatManagerUser", "TomcatManagerPass"]
        },{
        "Label" : {"default": "Solr Server Information"},
        "Parameters" : ["SolrInstanceType"]
        },{
        "Label" : {"default": "Custom Provisioning Information"},
        "Parameters" : ["CustomShScriptUrl"]
      }],
      "ParameterLabels" : {
        "BastionInstanceType": {"default": "Bastion Server size:"},
        "KeyName": {"default": "Key pair:"},
        "SSHLocation": {"default": "CIDR range:"},
        "DatabaseRootUser": {"default": "Mysql Root User:"},
        "DatabaseRootPass": {"default": "Mysql Root Password:"},
        "RDSSubnet1AZ": {"default": "DB Availability Zone 1:"},
        "RDSSubnet2AZ": {"default": "DB Availability Zone 2:"},
        "DrupalInstanceType": {"default": "Drupal Server size:"},
        "DrupalDatabaseUser": {"default": "Drupal Database User:"},
        "DrupalDatabasePass": {"default": "Drupal Database Password:"},
        "DrupalAdminUser": {"default": "Drupal Admin User:"},
        "DrupalAdminPass": {"default": "Drupal Admin Password:"},
        "DrupalAdminEmail": {"default": "Drupal Admin Email Address:"},
      }
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATPV64"   },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATPV64"   },
      "m1.medium"   : { "Arch" : "NATPV64"   },
      "m1.large"    : { "Arch" : "NATPV64"   },
      "m1.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.2xlarge"  : { "Arch" : "NATPV64"   },
      "m2.4xlarge"  : { "Arch" : "NATPV64"   },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATPV64"   },
      "c1.xlarge"   : { "Arch" : "NATPV64"   },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-6869aa05", "HVMG2" : "ami-3353c649"},
      "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-7172b611", "HVMG2" : "ami-58ce1220"},
      "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-31490d51", "HVMG2" : "ami-62ad9502"},
      "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-f9dd458a", "HVMG2" : "ami-41bc0a38"},
      "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-886369ec", "HVMG2" : "NOT_SUPPORTED"},
      "eu-west-3"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "NOT_SUPPORTED", "HVMG2" : "NOT_SUPPORTED"},
      "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-ea26ce85", "HVMG2" : "ami-b50d8fda"},
      "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-374db956", "HVMG2" : "ami-14e45872"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-2b408b45", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-a59b49c6", "HVMG2" : "ami-2a80d649"},
      "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-dc361ebf", "HVMG2" : "ami-02c42e60"},
      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-ffbdd790", "HVMG2" : "ami-f6165899"},
      "us-east-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-f6035893", "HVMG2" : "NOT_SUPPORTED"},
      "ca-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-730ebd17", "HVMG2" : "NOT_SUPPORTED"},
      "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-6dd04501", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-8e6aa0e3", "HVMG2" : "NOT_SUPPORTED"},
      "cn-northwest-1"   : {"PV64" : "ami-80707be2", "HVM64" : "ami-cb858fa9", "HVMG2" : "NOT_SUPPORTED"}
    }

  },

  "Resources" : {

    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.50.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [{
          "Key": "Name",
          "Value": "LDbase VPC"
        }]
      }
    },
    
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "DependsOn": "VPC"
    },

    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": ["VPC", "InternetGateway"],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },

    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "AttachGateway",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.50.0.0/24",
        "MapPublicIpOnLaunch": "true",
        "AvailabilityZone": {
          "Fn::Select": [
            "0", {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Public Subnet 1"
        }]
      }
    },

    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.50.1.0/24",
        "AvailabilityZone": {
          "Ref" : "RDSSubnet1AZ"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Private Subnet 1"
        }]        
      }
    },

    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.50.2.0/24",
        "AvailabilityZone": {
          "Ref" : "RDSSubnet2AZ"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Private Subnet 2"
        }]        
      }
    },

    "RDSSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "DependsOn": ["PrivateSubnet1", "PrivateSubnet2"],
      "Properties" : {
         "DBSubnetGroupDescription" : "DB Private Subnet",
         "SubnetIds" : [
          { "Ref" : "PrivateSubnet1" },
          { "Ref" : "PrivateSubnet2" }
         ]
      }
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": ["VPC", "AttachGateway"],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Public"
        }]
      }
    },

    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": ["PublicRouteTable", "AttachGateway"],
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },

    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": ["PublicRouteTable", "PublicSubnet1", "AttachGateway"],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },

    "PublicSSHSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access from outside the local network",
        "VpcId" : {
          "Ref": "VPC"
        },
        "Tags" : [{
          "Key": "Name",
          "Value": "PublicSSHSecurityGroup"       
        }],
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    },

    "PrivateSSHSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access for local subnet",
        "VpcId" : {
          "Ref": "VPC"
        },
        "Tags" : [{
          "Key": "Name",
          "Value": "PrivateSSHSecurityGroup"       
        }],
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "10.50.0.100/32"}
        ]
      }
    },

    "DBServerSecurityGroup" : {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription": "Open database for access",
        "VpcId" : {
          "Ref": "VPC"
        },
        "Tags" : [{
          "Key": "Name",
          "Value": "DBServerSecurityGroup"       
        }],
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "3306", "ToPort" : "3306","CidrIp" : "10.50.0.0/24"}
        ]
      }
    },
    
    "WebServerSecurityGroup" : {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription": "Allow Access to Web Server",
        "VpcId" : {
          "Ref": "VPC"
        },
        "Tags" : [{
          "Key": "Name",
          "Value": "WebServerSecurityGroup"       
        }],
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80","CidrIp" : "0.0.0.0/0"}
        ]
      }
    },

    "MySQLRDS" : {
     "Type" : "AWS::RDS::DBInstance",
     "Properties" : {
       "AllocatedStorage" : "5",
       "DBInstanceClass" : "db.t2.micro",
       "Engine" : "MySQL",
       "MasterUsername" : { "Ref" : "DatabaseRootUser" },
       "MasterUserPassword" : { "Ref" : "DatabaseRootPass" },
       "DBSubnetGroupName" : {"Ref" : "RDSSubnetGroup"},
       "PubliclyAccessible" : "false",
       "VPCSecurityGroups" : [ { "Fn::GetAtt": [ "DBServerSecurityGroup", "GroupId" ] } ],
     },
     "DeletionPolicy" : "Delete"
   },

    "Bastion" : {
      "Type" : "AWS::EC2::Instance",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "BastionInstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "BastionInstanceType" },
        "KeyName"        : { "Ref" : "KeyName" },
        "NetworkInterfaces": [{
          "DeviceIndex": "0",
          "PrivateIpAddress": "10.50.0.100",
          "AssociatePublicIpAddress": "true",
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "GroupSet": [{
            "Ref": "PublicSSHSecurityGroup"
          }]
        }],
        "Tags": [{
          "Key": "Name",
          "Value": "Bastion Server"
        }],  
        "UserData" : {
          "Fn::Base64": {
            "Fn::Join": [
              "\n", [
               "#!/bin/bash \n",
               "wget https://raw.githubusercontent.com/ldbase/ldbase_deployment/master/build_scripts/awsmount.sh -O /root/timezone.sh \n",
               "wget https://raw.githubusercontent.com/ldbase/ldbase_deployment/master/build_scripts/awsmount.sh -O /root/update.sh \n",
               "wget https://raw.githubusercontent.com/ldbase/ldbase_deployment/master/build_scripts/bastion.sh -O /root/bastion.sh \n",
               "sh /root/timezone.sh > /root/build-log.timezone.txt 2>&1"
               "sh /root/update.sh > /root/build-log.update.txt 2>&1"
               "sh /root/bastion.sh > /root/build-log.txt 2>&1"
              ]
            ]
          }
        },
      },
    },

    "Drupal" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn": ["MySQLRDS"],
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "BastionInstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "DrupalInstanceType" },
        "KeyName"        : { "Ref" : "KeyName" },
        "NetworkInterfaces": [{
          "DeviceIndex": "0",
          "PrivateIpAddress": "10.50.0.101",
          "AssociatePublicIpAddress": "true",
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "GroupSet": [
            { "Ref": "PrivateSSHSecurityGroup" },
            { "Ref": "WebServerSecurityGroup" }
          ]
        }],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sdb",
            "Ebs" : {
              "VolumeSize" : "10",
              "DeleteOnTermination" : "true",
            }
          },
          {
            "DeviceName" : "/dev/sdc",
            "Ebs" : {
              "VolumeSize" : "5",
              "DeleteOnTermination" : "true",
            }
          }
        ],
        "Tags": [{
          "Key": "Name",
          "Value": "Drupal Server"
        }],  
        "UserData" : {
          "Fn::Base64": {
            "Fn::Join": [
              "", [
               "#!/bin/bash \n",
               "export DATABASE_ENDPOINT=", { "Fn::GetAtt": ["MySQLRDS", "Endpoint.Address"] }, "\n", 
               "export DATABASE_ROOT_USER=", { "Ref" : "DatabaseRootUser" }, "\n",
               "export DATABASE_ROOT_PASS=", { "Ref" : "DatabaseRootPass" }, "\n",
               "export DRUPAL_DATABASE_USER=", { "Ref" : "DrupalDatabaseUser" }, "\n",
               "export DRUPAL_DATABASE_PASS=", { "Ref" : "DrupalDatabasePass" }, "\n",
               "export DRUPAL_ADMIN_USER=", { "Ref" : "DrupalAdminUser" }, "\n",
               "export DRUPAL_ADMIN_PASS=", { "Ref" : "DrupalAdminPass" }, "\n",
               "export DRUPAL_ADMIN_EMAIL=", { "Ref" : "DrupalAdminEmail" }, "\n",
               "wget https://raw.githubusercontent.com/ldbase/ldbase_deployment/master/build_scripts/awsmount.sh -O /root/mount.sh \n",
               "wget https://raw.githubusercontent.com/ldbase/ldbase_deployment/master/build_scripts/awsmount.sh -O /root/timezone.sh \n",
               "wget https://raw.githubusercontent.com/ldbase/ldbase_deployment/master/build_scripts/awsmount.sh -O /root/update.sh \n",
               "wget https://raw.githubusercontent.com/ldbase/ldbase_deployment/master/build_scripts/drupal.sh -O /root/drupal.sh \n",
               "sh /root/mount.sh > /root/build-log.mount.txt 2>&1"
               "sh /root/timezone.sh > /root/build-log.timezone.txt 2>&1"
               "sh /root/update.sh > /root/build-log.update.txt 2>&1"
               "sh /root/drupal.sh > /root/build-log.drupal.txt 2>&1"
              ]
            ]
          }
        },
      },
    },

  },
}
